{"version":3,"file":"static/js/888.eba83961.chunk.js","mappings":"8PACA,EAA+B,mCAA/B,EAA8E,gCAA9E,EAAqI,2CAArI,EAAoM,wCAApM,EAA+P,uCAA/P,EAAgU,8CAAhU,EAAmY,yCAAnY,EAAgc,wCAAhc,EAA4f,wC,SCgE5f,EA1DqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACEC,EAAAA,EAAAA,IAAgBT,GADlB,OACXU,EADW,OAEjBJ,EAASI,GACTN,GAAW,GAHM,2CAAH,qDAOhB,OADAI,IACO,kBAAMJ,GAAW,EAAjB,CACR,GAAE,CAACJ,IA0BJ,OACE,iBAAKW,UAAWC,EAAhB,UACGT,EAAY,IAxBb,gBAAKQ,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXC,IAAG,yCAAoCR,EAAMS,aAC7CC,IAAKV,EAAMW,WAGf,iBAAKL,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAsCP,EAAMW,SAC5C,wCAAgBX,EAAMY,iBACtB,eAAIN,UAAWC,EAAf,uBACA,uBAAIP,EAAMa,YACV,eAAIP,UAAWC,EAAf,qBACA,uBAAIP,EAAMc,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,eAWhC,eAAIX,UAAWC,EAAf,8BACA,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASW,GAAG,OAAOZ,UAAWC,EAA9B,mBAGA,SAAC,KAAD,CAASW,GAAG,UAAUZ,UAAWC,EAAjC,yBAIF,SAAC,KAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetails\":\"MovieDetails_MovieDetails__YjM5F\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"movieInfo__container\":\"MovieDetails_movieInfo__container__tMC6p\",\"movieInfo__poster\":\"MovieDetails_movieInfo__poster__tEufm\",\"movieInfo__title\":\"MovieDetails_movieInfo__title__-awer\",\"movieInfo__sectionTitle\":\"MovieDetails_movieInfo__sectionTitle__ORSSZ\",\"movieInfo__buttons\":\"MovieDetails_movieInfo__buttons__jjB2m\",\"movieInfo__button\":\"MovieDetails_movieInfo__button__dzoiq\",\"movieInfo__column\":\"MovieDetails_movieInfo__column__I93eV\"};","import React from 'react';\nimport { useParams, Outlet, NavLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/GetMovies';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setLoading] = useState(true);\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const data = await getMovieDetails(movieId);\n      setMovie(data);\n      setLoading(false);\n    };\n\n    fetchMovie();\n    return () => setLoading(true);\n  }, [movieId]);\n\n  const renderMovieInfo = () => {\n    return (\n      <div className={css.movieInfo}>\n        <div className={css.movieInfo__container}>\n          <div className={css.movieInfo__column}>\n            <img\n              className={css.movieInfo__poster}\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </div>\n          <div className={css.movieInfo__column}>\n            <h2 className={css.movieInfo__title}>{movie.title}</h2>\n            <p>User Score: {movie.vote_average}</p>\n            <h3 className={css.movieInfo__sectionTitle}>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3 className={css.movieInfo__sectionTitle}>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name + ' ')}</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={css.MovieDetails}>\n      {isLoading ? '' : renderMovieInfo()}\n\n      <h3 className={css.movieInfo__sectionTitle}>Additional Info</h3>\n      <div className={css.movieInfo__buttons}>\n        <NavLink to=\"cast\" className={css.movieInfo__button}>\n          Cast\n        </NavLink>\n        <NavLink to=\"reviews\" className={css.movieInfo__button}>\n          Reviews\n        </NavLink>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","isLoading","setLoading","movie","setMovie","useEffect","fetchMovie","getMovieDetails","data","className","css","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","to"],"sourceRoot":""}