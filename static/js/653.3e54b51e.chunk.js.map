{"version":3,"file":"static/js/653.3e54b51e.chunk.js","mappings":"6PACA,EAA0B,wBAA1B,EAA2D,uBAA3D,EAA+F,2BAA/F,EAA8I,kCAA9I,EAA0M,wCAA1M,EAAqQ,iC,SC0DrQ,EAlDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAgBzBC,EAAW,mCAAG,qGACCC,EAAAA,EAAAA,GAAeH,GADhB,OACZI,EADY,OAElBR,EAAUQ,EAAKC,SAFG,2CAAH,qDAUjB,OALAC,EAAAA,EAAAA,YAAU,WACRJ,GAED,GAAE,CAACF,KAGF,iBAAKO,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAgBC,SAAU,SAAAC,GAAC,OArB/B,SAAAA,GACfA,EAAEC,iBACF,IAAMC,EAAeF,EAAEG,cAAcC,SAASd,MAAMe,MAC/CH,GAGLb,EAAgB,CAAEC,MAAOY,GAC1B,CAcmDI,CAASN,EAAb,EAA5C,WACE,mBAAQO,KAAK,SAASV,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACED,UAAWC,EACXS,KAAK,OACLC,aAAa,MACbC,KAAK,QACLC,WAAS,EACTC,YAAY,sBAGhB,gBAAKd,UAAWC,EAAhB,SAA8Bb,EAAO2B,KAxCrB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GACnCC,EAAS,yCAAqCF,GACpD,OAAO,SAACG,EAAA,EAAD,CAAoBF,GAAIA,EAAIF,MAAOA,EAAOK,UAAWF,GAArCD,EACxB,QAwCF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Gallery\":\"Movies_Gallery__0K4-T\",\"movies\":\"Movies_movies__tPRCM\",\"SearchForm\":\"Movies_SearchForm__MevnG\",\"SearchForm_button\":\"Movies_SearchForm_button__INHSI\",\"SearchForm_button_label\":\"Movies_SearchForm_button_label__OAxZz\",\"SearchForm_input\":\"Movies_SearchForm_input__9oQiN\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMovieSearch } from 'services/GetMovies';\nimport { MovieCard } from 'components/MovieTile/MovieCard';\n\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const renderMovie = ({ title, poster_path, id }) => {\n    const image_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    return <MovieCard key={id} id={id} title={title} image_src={image_url} />;\n  };\n\n  const setQuery = e => {\n    e.preventDefault();\n    const currentQuery = e.currentTarget.elements.query.value;\n    if (!currentQuery) {\n      return;\n    }\n    setSearchParams({ query: currentQuery });\n  };\n\n  const searchMovie = async () => {\n    const data = await getMovieSearch(query);\n    setMovies(data.results);\n  };\n\n  useEffect(() => {\n    searchMovie();\n    // eslint-disable-next-line\n  }, [query]);\n\n  return (\n    <div className={css.movies}>\n      <form className={css.SearchForm} onSubmit={e => setQuery(e)}>\n        <button type=\"submit\" className={css.SearchForm_button}>\n          <span className={css.SearchForm_button_label}>Search</span>\n        </button>\n\n        <input\n          className={css.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"query\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n      <div className={css.Gallery}>{movies.map(renderMovie)}</div>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","searchMovie","getMovieSearch","data","results","useEffect","className","css","onSubmit","e","preventDefault","currentQuery","currentTarget","elements","value","setQuery","type","autoComplete","name","autoFocus","placeholder","map","title","poster_path","id","image_url","MovieCard","image_src"],"sourceRoot":""}